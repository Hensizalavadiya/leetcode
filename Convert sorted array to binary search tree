# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def sortedArrayToBST(self, nums: List[int]) -> Optional[TreeNode]:
        if not nums:
            return None

        mid = len(nums) // 2  # Find the middle index
        node = TreeNode(nums[mid])  # Create a new tree node with the middle element

        # Recursively build the left and right subtrees
        node.left = self.sortedArrayToBST(nums[:mid])  # Left half
        node.right = self.sortedArrayToBST(nums[mid + 1:])  # Right half
  
        return node
        
