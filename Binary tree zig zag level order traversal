# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def zigzagLevelOrder(self, root):
        """
        :type root: Optional[TreeNode]
        :rtype: List[List[int]]
        """
        if not root:
            return []
        
        ans = []
        dq = deque([root])
        isLeftToRight = True
        
        while dq:
            currLevel = []
            for _ in range(len(dq)):
                node = dq.popleft()
                currLevel.append(node.val)
                if node.left:
                    dq.append(node.left)
                if node.right:
                    dq.append(node.right)
            if not isLeftToRight:
                currLevel.reverse()
            ans.append(currLevel)
            isLeftToRight = not isLeftToRight
        
        return ans    

        
