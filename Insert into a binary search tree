# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def insertIntoBST(self, root: Optional[TreeNode], val: int) -> Optional[TreeNode]:
        if root is None:
            return TreeNode(val)
        
        # Traverse the tree to find the correct position for the new value
        if val < root.val:
            root.left = self.insertIntoBST(root.left, val)  # Go left
        else:
            root.right = self.insertIntoBST(root.right, val)  # Go right
        
        return root 
        
